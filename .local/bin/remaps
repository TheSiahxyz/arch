#!/bin/sh

# This script is called on startup to remap keys.
# Decrease key repeat delay to 300ms and increase key repeat rate to 50 per second.
xset r rate 300 50
# Map the caps lock key to control, and map the menu key to right super.
setxkbmap -option caps:ctrl_modifier,altwin:menu_win,altwin:swap_lalt_lwin
xinput list | grep 'id=' | while read -r line; do
    id=$(echo "$line" | grep -i 'keyboard.*id.*keyboard' | sed 's/.*id=\([0-9]\+\).*/\1/')
    [ -z "$id" ] || {
        case "$(echo "$line" | grep -oE '.*id=' | sed 's/ id=.*//')" in
            *HHKB*) setxkbmap -device "$id" -option ;;
            # *"Lite-On Technology Corp. ThinkPad USB Keyboard with TrackPoint"*) setxkbmap -device "$id" -option caps:ctrl_modifier,altwin:menu_win,ctrl:swap_latl_lctl ;;
        esac
    }
done
# xinput list | grep -q "Lenovo USB Travel Keyboard" && key="Lite-On Technology Corp. ThinkPad USB Keyboard with TrackPoint" && xinput set-prop "$key" 310 1 && xinput set-prop "$key" 302 {0,0,1}
# When left control, caps lock, or Super_L is pressed only once, treat it as escape.
killall xcape 2>/dev/null ; xcape -e 'Caps_Lock=Escape' #;Control_L=Escape' #;Super_L=Escape'
# Turn off caps lock if on since there is no longer a key for it.
xset -q | grep -q "Caps Lock:\s*on" && xdotool key Caps_Lock
filter() { grep 'pointer' | grep -o 'id=[0-9]\+' | sed 's/id=//' ;}
[ -z "$1" ] && {
    default=2
    xinput list | grep 'Logitech USB Receiver\s*id' | filter | \
        xargs -I {} xinput set-prop {} "Coordinate Transformation Matrix" $default, 0, 0, 0, $default, 0, 0, 0, 1
    xinput list | grep 'TPPS/2 IBM TrackPoint\s*id' | filter | \
        xargs -I {} xinput set-prop {} "Coordinate Transformation Matrix" $default, 0, 0, 0, $default, 0, 0, 0, 1
    xinput list | grep 'Lite-On Technology Corp. ThinkPad USB Keyboard with TrackPoint' | filter | \
        xargs -I {} xinput set-prop {} "Coordinate Transformation Matrix" $default, 0, 0, 0, $default, 0, 0, 0, 1
} || {
    xinput list | grep 'Logitech USB Receiver\s*id' | filter | \
        xargs -I {} xinput set-prop {} "Coordinate Transformation Matrix" $1, 0, 0, 0, $1, 0, 0, 0, 1
    xinput list | grep 'TPPS/2 IBM TrackPoint\s*id' | filter | \
        xargs -I {} xinput set-prop {} "Coordinate Transformation Matrix" $1, 0, 0, 0, $1, 0, 0, 0, 1
    xinput list | grep 'Lite-On Technology Corp. ThinkPad USB Keyboard with TrackPoint' | filter | \
        xargs -I {} xinput set-prop {} "Coordinate Transformation Matrix" $1, 0, 0, 0, $1, 0, 0, 0, 1
}
