#!/bin/sh

# Directory where your stow packages are located, adjust as necessary
stowdir="${XDG_DOTFILES_DIR:-${HOME}/.dotfiles}"

# Function to ask user for resolution strategy using dmenu
ask_resolution_strategy() {
	printf "delete\nmove" | dmenu -i -p "Choose resolution strategy: "
}

# Function to stow a package and resolve conflicts
stow_package() {
	resolve_strategy="$1"
	# Attempt to stow the package
	output=$(stow --no-folding . 2>&1)
	status=$?

	# Handle conflicts based on resolution strategy
	if [ $status -ne 0 ]; then
		echo "$output" | grep "over existing target is stowed to a different package" | while IFS= read -r line; do
			conflict_path=$(echo "$line" | sed -E 's/.*\: (.*) =>.*/\1/')
			full_path="$HOME/$conflict_path"
			if [ "$resolve_strategy" = "delete" ]; then
				rm -rf "$full_path"
			elif [ "$resolve_strategy" = "move" ]; then
				mv "$full_path" "${full_path}.dotbak"
			fi
		done
		echo "$output" | grep "over existing target" | while IFS= read -r line; do
			conflict_path=$(echo "$line" | sed -E 's/.* (.*) since.*/\1/')
			full_path="$HOME/$conflict_path"
			if [ "$resolve_strategy" = "delete" ]; then
				rm -rf "$full_path"
			elif [ "$resolve_strategy" = "move" ]; then
				mv "$full_path" "${full_path}.dotbak"
			fi
		done

		# Retry stowing after conflict resolution
		output=$(stow --no-folding . 2>&1)
		status=$?
	fi

	# Final notification based on status
    [ "$status" -eq 0 ] && notify-send "🔗 Successfully stowed" || { notify-send "❌ Failed to stow"; exit 1; }
}

# Ensure running from the correct directory
cd "$stowdir" || exit 1

# Ask the user for the resolution strategy
resolve=$(ask_resolution_strategy)

# Attempt to stow the package and resolve any conflicts
stow_package "$resolve"
ln -sf "$stowdir/.config/shell/profile" "$HOME/.zprofile"

# Link for bash
ln -sf "$stowdir/.config/bash/bash_profile" "$HOME/.bash_profile"
ln -sf "$stowdir/.config/bash/bashrc" "$HOME/.bashrc"

# Link for gtk 2.0
ln -sf "$stowdir/.config/gtk-2.0/gtkrc-2.0" "$HOME/.gtkrc-2.0"

# Reload shortcuts (assumes this functionality is defined elsewhere and works as expected)
shortcuts >/dev/null 2>&1 || exit 1
zsh -c "source '${XDG_CONFIG_HOME:-${HOME}/.config}/shell/shortcutrc'" 2>/dev/null || exit 1
zsh -c "source '${XDG_CONFIG_HOME:-${HOME}/.config}/shell/zshnameddirrc'" 2>/dev/null || exit 1
notify-send "✅ Updated shortcuts"
