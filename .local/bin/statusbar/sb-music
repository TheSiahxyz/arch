#!/bin/sh

filter() {
	if ps -C mpd >/dev/null 2>&1; then
		status=$(mpc status)
		artist=$(mpc current -f %artist%)
		track=$(mpc current -f %title%)
		pos_dur=$(echo "$status" | grep -o '[0-9]\+:[0-9]\+/[0-9]\+:[0-9]\+')

		indicators=""
		echo "$status" | grep -q 'random: on' && indicators="${indicators}🔀"
		echo "$status" | grep -q 'repeat: on' && indicators="${indicators}🔁"
		echo "$status" | grep -q 'single: on' && indicators="${indicators}🔂"

		prefix=""
		echo "$status" | grep -q 'playing' && prefix="🎵"
		echo "$status" | grep -q 'paused' && prefix="⏸"
		[ -z "$prefix" ] && return

		output_prefix=$([ -n "$indicators" ] && echo "$indicators")

		echo "$prefix$artist - $track $pos_dur$output_prefix"
	fi
}

# pidof -x sb-mpdup >/dev/null 2>&1 || sb-mpdup >/dev/null 2>&1 &

# Handling interaction based on button press
case $BLOCK_BUTTON in
    1) mpc status | filter ; setsid "$TERMINAL" -e ncmpcpp ;; # left click, opens ncmpcpp
    2) mpc toggle | filter ;; # right click, pause/unpause
    3) mpc status | filter ; notify-send "🎵 Music module" "- Shows mpd song playing and status
- 🎵 if playing
- ⏸ if paused
- 🔂 if single on
- 🔁 if repeat on
- 🔀 if random on
- Left click opens ncmpcpp
- Middle click pauses
- Scroll changes track" ;;
    4) mpc prev | filter ;; # scroll up, previous
    5) mpc next | filter ;; # scroll down, next
    6) mpc status | filter ; setsid -f "$TERMINAL" -e "$EDITOR" "$0" ;;
    *) mpc status | filter ;; # default, show current status
esac

kill -45 "$(pidof "${STATUSBAR:-dwmblocks}")"
