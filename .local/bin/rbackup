#!/bin/sh

# local backup
backup_path="/mnt/extra/backup"
dot_path="${XDG_DOTFILES_DIR:-${HOME}/.dotfiles}"
music_path="${XDG_MUSIC_DIR:-${HOME}/Music}"
obsidian_path="$HOME/Private/git/Obsidian"
pass_path="${PASSWORD_STORE_DIR:-${XDG_DATA_HOME:-${HOME}/.local/share}/.password-store}"
suck_path="${XDG_SOURCES_HOME:-${HOME}/.local/src}/suckless"
web_path="${THESIAH_WWW:-${HOME}/Private/git/THESIAH}"
USER_HOME=$(eval echo ~"$USER")

# targets
bash_path="${XDG_DOTFILES_DIR:-${HOME}/.dotfiles}/.config/bash"
shell_path="${XDG_DOTFILES_DIR:-${HOME}/.dotfiles}/.config/shell"
vim_path="${XDG_DOTFILES_DIR:-${HOME}/.dotfiles}/.config/vim"
thesiah_path="$web_path/public"
lf_path="${XDG_DOTFILES_DIR:-${HOME}/.dotfiles}/.config/lf"

error() {
	printf "%s\n" "$1" >&2
	exit 1
}

mount_luks() {
    if ! mount | grep -q " /mnt/extra "; then
        SIZE_NVME0=$(sudo blockdev --getsize64 /dev/nvme0n1p1)
        SIZE_NVME1=$(sudo blockdev --getsize64 /dev/nvme1n1p1)
        [ "$SIZE_NVME1" -lt "$SIZE_NVME0" ] && TARGET_DEVICE="/dev/nvme0n1p1" || TARGET_DEVICE="/dev/nvme1n1p1"
        ${TERMINAL:-st} -n floatterm -g 60x1 -e sudo cryptsetup open "$TARGET_DEVICE" "extra"
        sudo -A mount "/dev/mapper/extra" "/mnt/extra" -o uid="$(id -u)",gid="$(id -g)" || sudo -A mount "/dev/mapper/extra" "/mnt/extra"
    fi
}

# Using a loop over space-separated strings instead of an array
sync_files() {
    for source in "$dot_path" "$music_path" "$obsidian_path" "$pass_path" "$suck_path" "$web_path"; do
        rsync -vrazPlu --delete "$source" "$backup_path/" >/dev/null 2>&1 || {
            echo "Failed to sync $(basename "$source")"
        }
    done
}

sync_root() {
    # clean targets
    ssh "$THESIAH_SERVER" "rm -rf /root/.config /var/www/thesiah"
    ssh "$THESIAH_SERVER" "mkdir -p /root/.config/bash /root/.config/shell /root/.config/vim /root/.local/bin /root/.local/share /root/.local/state /var/www/thesiah"
    sudo rm -rf /root/.config
    sudo mkdir -p /root/.config/{bash,lf,shell,vim} /root/.local/{bin,share,state}

    # Root configuration synchronization on local system
    sudo rsync -vrazPlu --delete "$vim_path/vimrc" "/root/.config/vim/" >/dev/null 2>&1
    sudo rsync -vrazPlu --delete "$lf_path" "/root/.config/" >/dev/null 2>&1
    sudo mv -f "/root/.config/lf/rooticons" "/root/.config/lf/icons" >/dev/null 2>&1
    sudo rsync -vrazPlu --delete "$bash_path" "/root/.config/" >/dev/null 2>&1
    sudo rsync -vrazPlu --delete "$shell_path/inputrc" "/root/.config/shell/" >/dev/null 2>&1

    # load shortcuts
    shortcuts >/dev/null 2>&1

    # Modify root's Bash and LF configuration to include user-specific settings
    echo "[ -f \"$USER_HOME/.config/shell/shortcutrc\" ] && source \"$USER_HOME/.config/shell/shortcutrc\"" | sudo tee -a /root/.config/bash/bashrc >/dev/null 2>&1
    echo "[ -f \"$USER_HOME/.config/shell/zshnameddirrc\" ] && source \"$USER_HOME/.config/shell/zshnameddirrc\"" | sudo tee -a /root/.config/bash/bashrc >/dev/null 2>&1
    sudo sed -i "s|source \"~/.config/lf/shortcutrc\"|source \"$USER_HOME/.config/lf/shortcutrc\"|" /root/.config/lf/lfrc >/dev/null 2>&1
    echo 'source "/root/.config/lf/rootshortcutrc"' | sudo tee -a /root/.config/lf/lfrc >/dev/null 2>&1

    # Final ownership and link adjustments
    sudo chown -R root:root /root/.config/ >/dev/null 2>&1
    sudo ln -sf /root/.config/bash/bashrc /root/.bashrc >/dev/null 2>&1
    sudo ln -sf /root/.config/bash/bash_profile /root/.bash_profile >/dev/null 2>&1
    sudo ln -sf /root/.config/shell/inputrc /root/.inputrc >/dev/null 2>&1
    sudo ln -sf /root/.config/vim/vimrc /root/.vimrc >/dev/null 2>&1
}

sync_server() {
    # Sync operations with explicit error checking
    rsync -vrazPlu --delete "$thesiah_path/" "$THESIAH_SERVER:/var/www/thesiah/"
    rsync -vrazPlu --delete "$vim_path/vimrc" "$THESIAH_SERVER:/root/.config/vim/"
    rsync -vrazPlu --delete "$shell_path/inputrc" "$THESIAH_SERVER:/root/.config/shell/"
    sudo cp /root/.config/shell/rootshortcutrc ~/.cache/
    sudo chown -R "$USER":wheel ~/.cache/rootshortcutrc
    rsync -vrazPlu --remove-source-files "$HOME/.cache/rootshortcutrc" "$THESIAH_SERVER:/root/.config/shell/"

    # Adding custom shortcuts to root's shell configuration on the remote system
    ssh "$THESIAH_SERVER" "echo 'web=\"cd /var/www && ls -A\" \\' >> /root/.config/shell/rootshortcutrc"
    ssh "$THESIAH_SERVER" "echo 'wen=\"cd /var/www/nextcloud && ls -A\" \\' >> /root/.config/shell/rootshortcutrc" 
    ssh "$THESIAH_SERVER" "echo 'wep=\"cd /var/www/prosody && ls -A\" \\' >> /root/.config/shell/rootshortcutrc"
    ssh "$THESIAH_SERVER" "echo 'wet=\"cd /var/www/thesiah && ls -A\" \\' >> /root/.config/shell/rootshortcutrc"
    ssh "$THESIAH_SERVER" "echo 'gng=\"cd /etc/nginx/sites-available && ls -A\" \\' >> /root/.config/shell/rootshortcutrc"

    # Sync Bash configuration
    rsync -vrazPlu --delete "$bash_path" "$THESIAH_SERVER:/root/.config/"
    ssh "$THESIAH_SERVER" "chown -R root:root /var/www/thesiah"
    ssh "$THESIAH_SERVER" "chown -R root:root /root/.config/"
    ssh "$THESIAH_SERVER" "ln -sf /root/.config/bash/bash_profile /root/.profile"
    ssh "$THESIAH_SERVER" "source /root/.profile"
    
    # Sync for Git
    ssh "$THESIAH_SERVER" "cp -r /root/.config /var/www/git/"
    ssh "$THESIAH_SERVER" "chown -R git:git /var/www/git/.config/"
    ssh "$THESIAH_GIT" "ln -sf /var/www/git/.config/bash/bash_profile /var/www/git/.profile"
    ssh "$THESIAH_GIT" "source /var/www/git/.profile"
}

sync_nextcloud() {
    base="$(basename $backup_path)"
    parent="$(dirname $backup_path)"
    tmpdir="$(mktemp -d)"
    pw="$(pass show server/nextcloud)"
    cd "$tmpdir"
    tar -C "$parent" -zcf "$base".tar.gz "$base"
    rsync -vrazPlu --delete "$tmpdir/$base".tar.gz "$THESIAH_SERVER:/var/www/nextcloud/data/si@thesiah.xyz/files/backup/"
    ssh "$THESIAH_SERVER" "chown -R www-date:www-data /var/www/nextcloud/data/si@thesiah.xyz/files/backup 2>/dev/null"
    ssh "$THESIAH_SERVER" "cd /var/www/nextcloud && sudo -u www-data ./occ files:scan --path="/si@thesiah.xyz/files" 2>/dev/null"
    rm -r "$tmpdir"
}

# mount_luks || error "Failed to mount $backup_path"
echo "Backup starts to $backup_path..."
[ -d "$backup_path" ] || mkdir -p "$backup_path"
sync_files || error "Failed back up files"
sync_root || error "Failed back up root"
sync_server || error "Failed back up server"
sync_nextcloud || error "Failed back up nextcloud"
echo "Done!"
